
OrangutanUtilFunc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000d70  00000e04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00800112  00800112  00000e16  2**0
                  ALLOC
  3 .stab         00001e30  00000000  00000000  00000e18  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00003f56  00000000  00000000  00002c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00006b9e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000c8  00000000  00000000  00006bce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000008fd  00000000  00000000  00006c96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000004db  00000000  00000000  00007593  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000006a9  00000000  00000000  00007a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000174  00000000  00000000  00008118  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003df  00000000  00000000  0000828c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000004b9  00000000  00000000  0000866b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000088  00000000  00000000  00008b24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__vector_3>
  10:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__vector_3>
  14:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__vector_3>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 8a 02 	jmp	0x514	; 0x514 <__vector_18>
  4c:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e7       	ldi	r30, 0x70	; 112
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 37       	cpi	r26, 0x76	; 118
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 14 01 	call	0x228	; 0x228 <main>
  9e:	0c 94 b6 06 	jmp	0xd6c	; 0xd6c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <set_digital_input.constprop.0>:
	io->pinRegister = 0;
	io->portRegister = 0;
	io->ddrRegister = 0;
	io->bitmask = 0;

	if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
  a6:	88 30       	cpi	r24, 0x08	; 8
  a8:	58 f4       	brcc	.+22     	; 0xc0 <set_digital_input.constprop.0+0x1a>
	{
		io->pinRegister = (unsigned char*)&PIND;
		io->portRegister = (unsigned char*)&PORTD;
		io->ddrRegister = (unsigned char*)&DDRD;
		io->bitmask = 1 << pin;
  aa:	91 e0       	ldi	r25, 0x01	; 1
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <set_digital_input.constprop.0+0xa>
  ae:	99 0f       	add	r25, r25
  b0:	8a 95       	dec	r24
  b2:	ea f7       	brpl	.-6      	; 0xae <set_digital_input.constprop.0+0x8>
  b4:	89 2f       	mov	r24, r25

	if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
	{
		io->pinRegister = (unsigned char*)&PIND;
		io->portRegister = (unsigned char*)&PORTD;
		io->ddrRegister = (unsigned char*)&DDRD;
  b6:	aa e2       	ldi	r26, 0x2A	; 42
  b8:	b0 e0       	ldi	r27, 0x00	; 0
	io->bitmask = 0;

	if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
	{
		io->pinRegister = (unsigned char*)&PIND;
		io->portRegister = (unsigned char*)&PORTD;
  ba:	eb e2       	ldi	r30, 0x2B	; 43
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	21 c0       	rjmp	.+66     	; 0x102 <set_digital_input.constprop.0+0x5c>
		io->bitmask = 1 << (31 - pin);
	}

#else

	else if (pin < 14)		// pin 8 = PB0, ..., 13 = PB5 (PB6 and PB7 reserved for external clock)
  c0:	8e 30       	cpi	r24, 0x0E	; 14
  c2:	60 f4       	brcc	.+24     	; 0xdc <set_digital_input.constprop.0+0x36>
	{
		io->pinRegister = (unsigned char*)&PINB;
		io->portRegister = (unsigned char*)&PORTB;
		io->ddrRegister = (unsigned char*)&DDRB;
		io->bitmask = 1 << (pin - 8);
  c4:	98 ef       	ldi	r25, 0xF8	; 248
  c6:	98 0f       	add	r25, r24
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	01 c0       	rjmp	.+2      	; 0xce <set_digital_input.constprop.0+0x28>
  cc:	88 0f       	add	r24, r24
  ce:	9a 95       	dec	r25
  d0:	ea f7       	brpl	.-6      	; 0xcc <set_digital_input.constprop.0+0x26>

	else if (pin < 14)		// pin 8 = PB0, ..., 13 = PB5 (PB6 and PB7 reserved for external clock)
	{
		io->pinRegister = (unsigned char*)&PINB;
		io->portRegister = (unsigned char*)&PORTB;
		io->ddrRegister = (unsigned char*)&DDRB;
  d2:	a4 e2       	ldi	r26, 0x24	; 36
  d4:	b0 e0       	ldi	r27, 0x00	; 0
#else

	else if (pin < 14)		// pin 8 = PB0, ..., 13 = PB5 (PB6 and PB7 reserved for external clock)
	{
		io->pinRegister = (unsigned char*)&PINB;
		io->portRegister = (unsigned char*)&PORTB;
  d6:	e5 e2       	ldi	r30, 0x25	; 37
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	13 c0       	rjmp	.+38     	; 0x102 <set_digital_input.constprop.0+0x5c>
		io->ddrRegister = (unsigned char*)&DDRB;
		io->bitmask = 1 << (pin - 8);
	}
	else if (pin < 21)		// pin 14 = PC0, ..., 19 = PC5 (PC6 is reset, PC7 doesn't exist)
  dc:	85 31       	cpi	r24, 0x15	; 21
  de:	60 f4       	brcc	.+24     	; 0xf8 <set_digital_input.constprop.0+0x52>
	{
		io->pinRegister = (unsigned char*)&PINC;
		io->portRegister = (unsigned char*)&PORTC;
		io->ddrRegister = (unsigned char*)&DDRC;
		io->bitmask = 1 << (pin - 14);
  e0:	92 ef       	ldi	r25, 0xF2	; 242
  e2:	98 0f       	add	r25, r24
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	01 c0       	rjmp	.+2      	; 0xea <set_digital_input.constprop.0+0x44>
  e8:	88 0f       	add	r24, r24
  ea:	9a 95       	dec	r25
  ec:	ea f7       	brpl	.-6      	; 0xe8 <set_digital_input.constprop.0+0x42>
	}
	else if (pin < 21)		// pin 14 = PC0, ..., 19 = PC5 (PC6 is reset, PC7 doesn't exist)
	{
		io->pinRegister = (unsigned char*)&PINC;
		io->portRegister = (unsigned char*)&PORTC;
		io->ddrRegister = (unsigned char*)&DDRC;
  ee:	a7 e2       	ldi	r26, 0x27	; 39
  f0:	b0 e0       	ldi	r27, 0x00	; 0
		io->bitmask = 1 << (pin - 8);
	}
	else if (pin < 21)		// pin 14 = PC0, ..., 19 = PC5 (PC6 is reset, PC7 doesn't exist)
	{
		io->pinRegister = (unsigned char*)&PINC;
		io->portRegister = (unsigned char*)&PORTC;
  f2:	e8 e2       	ldi	r30, 0x28	; 40
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	05 c0       	rjmp	.+10     	; 0x102 <set_digital_input.constprop.0+0x5c>
static inline void get_io_registers(struct IOStruct* io, unsigned char pin)
{
	io->pinRegister = 0;
	io->portRegister = 0;
	io->ddrRegister = 0;
	io->bitmask = 0;
  f8:	80 e0       	ldi	r24, 0x00	; 0
// 1 in the position of the specified pin and 0s everywhere else.
static inline void get_io_registers(struct IOStruct* io, unsigned char pin)
{
	io->pinRegister = 0;
	io->portRegister = 0;
	io->ddrRegister = 0;
  fa:	a0 e0       	ldi	r26, 0x00	; 0
  fc:	b0 e0       	ldi	r27, 0x00	; 0
// with the specified pin (DDR, PORT, and PIN) along with a bitmask with a
// 1 in the position of the specified pin and 0s everywhere else.
static inline void get_io_registers(struct IOStruct* io, unsigned char pin)
{
	io->pinRegister = 0;
	io->portRegister = 0;
  fe:	e0 e0       	ldi	r30, 0x00	; 0
 100:	f0 e0       	ldi	r31, 0x00	; 0
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
	else
		*(ioPin->ddrRegister) &= ~ioPin->bitmask;
 102:	9c 91       	ld	r25, X
 104:	80 95       	com	r24
 106:	98 23       	and	r25, r24
 108:	9c 93       	st	X, r25
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
	else
		*(ioPin->portRegister) &= ~ioPin->bitmask;
 10a:	90 81       	ld	r25, Z
 10c:	98 23       	and	r25, r24
 10e:	90 83       	st	Z, r25
 110:	08 95       	ret

00000112 <init_encoders>:

#include "encoders.h"

void init_encoders(){
	
	init_serial();
 112:	0e 94 c7 00 	call	0x18e	; 0x18e <init_serial>
	set_digital_input(IO_C0,HIGH_IMPEDANCE);
 116:	8e e0       	ldi	r24, 0x0E	; 14
 118:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_input.constprop.0>
	set_digital_input(IO_C1,HIGH_IMPEDANCE);
 11c:	8f e0       	ldi	r24, 0x0F	; 15
 11e:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_input.constprop.0>
	set_digital_input(IO_C2,HIGH_IMPEDANCE);
 122:	80 e1       	ldi	r24, 0x10	; 16
 124:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_input.constprop.0>
	set_digital_input(IO_C3,HIGH_IMPEDANCE);
 128:	81 e1       	ldi	r24, 0x11	; 17
 12a:	0e 94 53 00 	call	0xa6	; 0xa6 <set_digital_input.constprop.0>
	encoders_init(IO_C0, IO_C1, IO_C2, IO_C3);
 12e:	21 e1       	ldi	r18, 0x11	; 17
 130:	40 e1       	ldi	r20, 0x10	; 16
 132:	6f e0       	ldi	r22, 0x0F	; 15
 134:	8e e0       	ldi	r24, 0x0E	; 14
 136:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <encoders_init>

0000013a <show_m1_encoder_value>:
}

void show_m1_encoder_value(){
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
	int count = 0, m1;
	for (count = 0; count<50;count++)
 142:	c0 e0       	ldi	r28, 0x00	; 0
 144:	d0 e0       	ldi	r29, 0x00	; 0
	{
		m1 = encoders_get_counts_m1();
 146:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <encoders_get_counts_m1>
 14a:	8c 01       	movw	r16, r24
		serial_send_number(count);
 14c:	ce 01       	movw	r24, r28
 14e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <serial_send_number>
		serial_send_string(": ");
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	91 e0       	ldi	r25, 0x01	; 1
 156:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <serial_send_string>
		serial_send_number(m1);
 15a:	c8 01       	movw	r24, r16
 15c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <serial_send_number>
		serial_send_string("\r\n");
 160:	83 e0       	ldi	r24, 0x03	; 3
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <serial_send_string>
		delay_ms(1000);
 168:	88 ee       	ldi	r24, 0xE8	; 232
 16a:	93 e0       	ldi	r25, 0x03	; 3
 16c:	0e 94 65 04 	call	0x8ca	; 0x8ca <delay_ms>
	encoders_init(IO_C0, IO_C1, IO_C2, IO_C3);
}

void show_m1_encoder_value(){
	int count = 0, m1;
	for (count = 0; count<50;count++)
 170:	21 96       	adiw	r28, 0x01	; 1
 172:	c2 33       	cpi	r28, 0x32	; 50
 174:	d1 05       	cpc	r29, r1
 176:	39 f7       	brne	.-50     	; 0x146 <show_m1_encoder_value+0xc>
		serial_send_string("\r\n");
		delay_ms(1000);
	}
	
	encoders_get_counts_and_reset_m1();
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	1f 91       	pop	r17
 17e:	0f 91       	pop	r16
		serial_send_number(m1);
		serial_send_string("\r\n");
		delay_ms(1000);
	}
	
	encoders_get_counts_and_reset_m1();
 180:	0c 94 08 06 	jmp	0xc10	; 0xc10 <encoders_get_counts_and_reset_m1>

00000184 <wait_for_sending_to_finish>:
unsigned char receive_buffer_position = 0;
char send_buffer[32];

void wait_for_sending_to_finish()
{
	while(!serial_send_buffer_empty());
 184:	0e 94 79 01 	call	0x2f2	; 0x2f2 <serial_send_buffer_empty>
 188:	88 23       	and	r24, r24
 18a:	e1 f3       	breq	.-8      	; 0x184 <wait_for_sending_to_finish>
}
 18c:	08 95       	ret

0000018e <init_serial>:

void init_serial(){
	if (!is_serial_init)
 18e:	80 91 35 01 	lds	r24, 0x0135
 192:	81 11       	cpse	r24, r1
 194:	0e c0       	rjmp	.+28     	; 0x1b2 <init_serial+0x24>
	{
		is_serial_init = 1;
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	80 93 35 01 	sts	0x0135, r24
		serial_set_baud_rate(9600);
 19c:	60 e8       	ldi	r22, 0x80	; 128
 19e:	75 e2       	ldi	r23, 0x25	; 37
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 41 03 	call	0x682	; 0x682 <serial_set_baud_rate>
		serial_receive_ring(receive_buffer, sizeof(receive_buffer));
 1a8:	60 e2       	ldi	r22, 0x20	; 32
 1aa:	86 e3       	ldi	r24, 0x36	; 54
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	0c 94 87 02 	jmp	0x50e	; 0x50e <serial_receive_ring>
 1b2:	08 95       	ret

000001b4 <serial_send_char>:
		str++;
	}
}

void serial_send_char(char ms_char){
	if (is_serial_init)
 1b4:	90 91 35 01 	lds	r25, 0x0135
 1b8:	99 23       	and	r25, r25
 1ba:	49 f0       	breq	.+18     	; 0x1ce <serial_send_char+0x1a>
	{
		send_buffer[0] = ms_char;
 1bc:	80 93 56 01 	sts	0x0156, r24
		serial_send(send_buffer,1);
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	86 e5       	ldi	r24, 0x56	; 86
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	0e 94 ed 03 	call	0x7da	; 0x7da <serial_send>
		wait_for_sending_to_finish();
 1ca:	0c 94 c2 00 	jmp	0x184	; 0x184 <wait_for_sending_to_finish>
 1ce:	08 95       	ret

000001d0 <serial_send_string>:
	}
}


void serial_send_string(char *str)
{
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	ec 01       	movw	r28, r24
	while (*str != 0x00)
 1d6:	89 91       	ld	r24, Y+
 1d8:	88 23       	and	r24, r24
 1da:	19 f0       	breq	.+6      	; 0x1e2 <serial_send_string+0x12>
	{
		serial_send_char(*str);
 1dc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <serial_send_char>
 1e0:	fa cf       	rjmp	.-12     	; 0x1d6 <serial_send_string+0x6>
		str++;
	}
}
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <serial_send_number>:
		serial_send(send_buffer,1);
		wait_for_sending_to_finish();
	}
}

void serial_send_number(int num){
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	a0 97       	sbiw	r28, 0x20	; 32
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
	if (is_serial_init)
 1fc:	20 91 35 01 	lds	r18, 0x0135
 200:	22 23       	and	r18, r18
 202:	49 f0       	breq	.+18     	; 0x216 <serial_send_number+0x2e>
	{
		char aux[32];
		itoa_c(num,aux);
 204:	be 01       	movw	r22, r28
 206:	6f 5f       	subi	r22, 0xFF	; 255
 208:	7f 4f       	sbci	r23, 0xFF	; 255
 20a:	0e 94 1b 01 	call	0x236	; 0x236 <itoa_c>
		serial_send_string(aux);
 20e:	ce 01       	movw	r24, r28
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <serial_send_string>
	}
}
 216:	a0 96       	adiw	r28, 0x20	; 32
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <main>:



int main()
{
	init_serial();
 228:	0e 94 c7 00 	call	0x18e	; 0x18e <init_serial>
	//init_analog_reader();
	//init_digital_IO();
	init_encoders();
 22c:	0e 94 89 00 	call	0x112	; 0x112 <init_encoders>

	while(1)
	{
		show_m1_encoder_value();
 230:	0e 94 9d 00 	call	0x13a	; 0x13a <show_m1_encoder_value>
 234:	fd cf       	rjmp	.-6      	; 0x230 <main+0x8>

00000236 <itoa_c>:
#include "util.h"

char* itoa_c(int i, char *b){
 236:	ef 92       	push	r14
 238:	ff 92       	push	r15
 23a:	0f 93       	push	r16
 23c:	1f 93       	push	r17
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	cd b7       	in	r28, 0x3d	; 61
 244:	de b7       	in	r29, 0x3e	; 62
 246:	2b 97       	sbiw	r28, 0x0b	; 11
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	f8 94       	cli
 24c:	de bf       	out	0x3e, r29	; 62
 24e:	0f be       	out	0x3f, r0	; 63
 250:	cd bf       	out	0x3d, r28	; 61
 252:	9c 01       	movw	r18, r24
 254:	8b 01       	movw	r16, r22
	char const digit[] = "0123456789";
 256:	8b e0       	ldi	r24, 0x0B	; 11
 258:	e6 e0       	ldi	r30, 0x06	; 6
 25a:	f1 e0       	ldi	r31, 0x01	; 1
 25c:	de 01       	movw	r26, r28
 25e:	11 96       	adiw	r26, 0x01	; 1
 260:	01 90       	ld	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	8a 95       	dec	r24
 266:	e1 f7       	brne	.-8      	; 0x260 <itoa_c+0x2a>
	char* p = b;
	if(i<0){
		*p++ = '-';
 268:	fb 01       	movw	r30, r22
#include "util.h"

char* itoa_c(int i, char *b){
	char const digit[] = "0123456789";
	char* p = b;
	if(i<0){
 26a:	37 ff       	sbrs	r19, 7
 26c:	07 c0       	rjmp	.+14     	; 0x27c <itoa_c+0x46>
		*p++ = '-';
 26e:	31 96       	adiw	r30, 0x01	; 1
 270:	8d e2       	ldi	r24, 0x2D	; 45
 272:	db 01       	movw	r26, r22
 274:	8c 93       	st	X, r24
		i *= -1;
 276:	31 95       	neg	r19
 278:	21 95       	neg	r18
 27a:	31 09       	sbc	r19, r1
	}
	int shifter = i;
 27c:	c9 01       	movw	r24, r18
	do{ //Move to where representation ends
		++p;
		shifter = shifter/10;
 27e:	4a e0       	ldi	r20, 0x0A	; 10
 280:	e4 2e       	mov	r14, r20
 282:	f1 2c       	mov	r15, r1
		*p++ = '-';
		i *= -1;
	}
	int shifter = i;
	do{ //Move to where representation ends
		++p;
 284:	31 96       	adiw	r30, 0x01	; 1
		shifter = shifter/10;
 286:	b7 01       	movw	r22, r14
 288:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__divmodhi4>
 28c:	cb 01       	movw	r24, r22
	}while(shifter);
 28e:	00 97       	sbiw	r24, 0x00	; 0
 290:	c9 f7       	brne	.-14     	; 0x284 <itoa_c+0x4e>
	*p = '\0';
 292:	10 82       	st	Z, r1
	do{ //Move back, inserting digits as u go
		*--p = digit[i%10];
 294:	8a e0       	ldi	r24, 0x0A	; 10
 296:	e8 2e       	mov	r14, r24
 298:	f1 2c       	mov	r15, r1
 29a:	c9 01       	movw	r24, r18
 29c:	b7 01       	movw	r22, r14
 29e:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__divmodhi4>
 2a2:	a1 e0       	ldi	r26, 0x01	; 1
 2a4:	b0 e0       	ldi	r27, 0x00	; 0
 2a6:	ac 0f       	add	r26, r28
 2a8:	bd 1f       	adc	r27, r29
 2aa:	a8 0f       	add	r26, r24
 2ac:	b9 1f       	adc	r27, r25
 2ae:	8c 91       	ld	r24, X
 2b0:	82 93       	st	-Z, r24
		i = i/10;
 2b2:	9b 01       	movw	r18, r22
	}while(i);
 2b4:	61 15       	cp	r22, r1
 2b6:	71 05       	cpc	r23, r1
 2b8:	81 f7       	brne	.-32     	; 0x29a <itoa_c+0x64>
	return b;
 2ba:	c8 01       	movw	r24, r16
 2bc:	2b 96       	adiw	r28, 0x0b	; 11
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	f8 94       	cli
 2c2:	de bf       	out	0x3e, r29	; 62
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	cd bf       	out	0x3d, r28	; 61
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	1f 91       	pop	r17
 2ce:	0f 91       	pop	r16
 2d0:	ff 90       	pop	r15
 2d2:	ef 90       	pop	r14
 2d4:	08 95       	ret

000002d6 <_Z25uart_disable_tx_interrupth.clone.1>:
 2d6:	e1 ec       	ldi	r30, 0xC1	; 193
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	8f 7d       	andi	r24, 0xDF	; 223
 2de:	80 83       	st	Z, r24
 2e0:	08 95       	ret

000002e2 <_ZN15OrangutanSerial15sendBufferEmptyEv>:
 2e2:	20 91 13 01 	lds	r18, 0x0113
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 91 15 01 	lds	r25, 0x0115
 2ec:	29 13       	cpse	r18, r25
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	08 95       	ret

000002f2 <serial_send_buffer_empty>:
 2f2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_ZN15OrangutanSerial15sendBufferEmptyEv>
 2f6:	08 95       	ret

000002f8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
 2f8:	28 2f       	mov	r18, r24
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	f9 01       	movw	r30, r18
 2fe:	ee 0f       	add	r30, r30
 300:	ff 1f       	adc	r31, r31
 302:	43 e0       	ldi	r20, 0x03	; 3
 304:	22 0f       	add	r18, r18
 306:	33 1f       	adc	r19, r19
 308:	4a 95       	dec	r20
 30a:	e1 f7       	brne	.-8      	; 0x304 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xc>
 30c:	e2 0f       	add	r30, r18
 30e:	f3 1f       	adc	r31, r19
 310:	ee 5e       	subi	r30, 0xEE	; 238
 312:	fe 4f       	sbci	r31, 0xFE	; 254
 314:	40 85       	ldd	r20, Z+8	; 0x08
 316:	51 85       	ldd	r21, Z+9	; 0x09
 318:	41 15       	cp	r20, r1
 31a:	51 05       	cpc	r21, r1
 31c:	09 f4       	brne	.+2      	; 0x320 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x28>
 31e:	52 c0       	rjmp	.+164    	; 0x3c4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
 320:	28 2f       	mov	r18, r24
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	f9 01       	movw	r30, r18
 326:	ee 0f       	add	r30, r30
 328:	ff 1f       	adc	r31, r31
 32a:	b3 e0       	ldi	r27, 0x03	; 3
 32c:	22 0f       	add	r18, r18
 32e:	33 1f       	adc	r19, r19
 330:	ba 95       	dec	r27
 332:	e1 f7       	brne	.-8      	; 0x32c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x34>
 334:	e2 0f       	add	r30, r18
 336:	f3 1f       	adc	r31, r19
 338:	ee 5e       	subi	r30, 0xEE	; 238
 33a:	fe 4f       	sbci	r31, 0xFE	; 254
 33c:	72 81       	ldd	r23, Z+2	; 0x02
 33e:	28 2f       	mov	r18, r24
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	f9 01       	movw	r30, r18
 344:	ee 0f       	add	r30, r30
 346:	ff 1f       	adc	r31, r31
 348:	93 e0       	ldi	r25, 0x03	; 3
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	9a 95       	dec	r25
 350:	e1 f7       	brne	.-8      	; 0x34a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
 352:	e2 0f       	add	r30, r18
 354:	f3 1f       	adc	r31, r19
 356:	ee 5e       	subi	r30, 0xEE	; 238
 358:	fe 4f       	sbci	r31, 0xFE	; 254
 35a:	94 81       	ldd	r25, Z+4	; 0x04
 35c:	79 17       	cp	r23, r25
 35e:	90 f5       	brcc	.+100    	; 0x3c4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	f9 01       	movw	r30, r18
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	a3 e0       	ldi	r26, 0x03	; 3
 36c:	22 0f       	add	r18, r18
 36e:	33 1f       	adc	r19, r19
 370:	aa 95       	dec	r26
 372:	e1 f7       	brne	.-8      	; 0x36c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x74>
 374:	e2 0f       	add	r30, r18
 376:	f3 1f       	adc	r31, r19
 378:	ee 5e       	subi	r30, 0xEE	; 238
 37a:	fe 4f       	sbci	r31, 0xFE	; 254
 37c:	92 81       	ldd	r25, Z+2	; 0x02
 37e:	49 0f       	add	r20, r25
 380:	51 1d       	adc	r21, r1
 382:	fa 01       	movw	r30, r20
 384:	60 83       	st	Z, r22
 386:	28 2f       	mov	r18, r24
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	f9 01       	movw	r30, r18
 38c:	ee 0f       	add	r30, r30
 38e:	ff 1f       	adc	r31, r31
 390:	63 e0       	ldi	r22, 0x03	; 3
 392:	22 0f       	add	r18, r18
 394:	33 1f       	adc	r19, r19
 396:	6a 95       	dec	r22
 398:	e1 f7       	brne	.-8      	; 0x392 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x9a>
 39a:	e2 0f       	add	r30, r18
 39c:	f3 1f       	adc	r31, r19
 39e:	ee 5e       	subi	r30, 0xEE	; 238
 3a0:	fe 4f       	sbci	r31, 0xFE	; 254
 3a2:	92 81       	ldd	r25, Z+2	; 0x02
 3a4:	9f 5f       	subi	r25, 0xFF	; 255
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	f9 01       	movw	r30, r18
 3ac:	ee 0f       	add	r30, r30
 3ae:	ff 1f       	adc	r31, r31
 3b0:	43 e0       	ldi	r20, 0x03	; 3
 3b2:	22 0f       	add	r18, r18
 3b4:	33 1f       	adc	r19, r19
 3b6:	4a 95       	dec	r20
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xba>
 3ba:	e2 0f       	add	r30, r18
 3bc:	f3 1f       	adc	r31, r19
 3be:	ee 5e       	subi	r30, 0xEE	; 238
 3c0:	fe 4f       	sbci	r31, 0xFE	; 254
 3c2:	92 83       	std	Z+2, r25	; 0x02
 3c4:	28 2f       	mov	r18, r24
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	f9 01       	movw	r30, r18
 3ca:	ee 0f       	add	r30, r30
 3cc:	ff 1f       	adc	r31, r31
 3ce:	a3 e0       	ldi	r26, 0x03	; 3
 3d0:	22 0f       	add	r18, r18
 3d2:	33 1f       	adc	r19, r19
 3d4:	aa 95       	dec	r26
 3d6:	e1 f7       	brne	.-8      	; 0x3d0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xd8>
 3d8:	e2 0f       	add	r30, r18
 3da:	f3 1f       	adc	r31, r19
 3dc:	ee 5e       	subi	r30, 0xEE	; 238
 3de:	fe 4f       	sbci	r31, 0xFE	; 254
 3e0:	42 81       	ldd	r20, Z+2	; 0x02
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	f9 01       	movw	r30, r18
 3e8:	ee 0f       	add	r30, r30
 3ea:	ff 1f       	adc	r31, r31
 3ec:	63 e0       	ldi	r22, 0x03	; 3
 3ee:	22 0f       	add	r18, r18
 3f0:	33 1f       	adc	r19, r19
 3f2:	6a 95       	dec	r22
 3f4:	e1 f7       	brne	.-8      	; 0x3ee <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xf6>
 3f6:	e2 0f       	add	r30, r18
 3f8:	f3 1f       	adc	r31, r19
 3fa:	ee 5e       	subi	r30, 0xEE	; 238
 3fc:	fe 4f       	sbci	r31, 0xFE	; 254
 3fe:	94 81       	ldd	r25, Z+4	; 0x04
 400:	49 17       	cp	r20, r25
 402:	01 f5       	brne	.+64     	; 0x444 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	f9 01       	movw	r30, r18
 40a:	ee 0f       	add	r30, r30
 40c:	ff 1f       	adc	r31, r31
 40e:	43 e0       	ldi	r20, 0x03	; 3
 410:	22 0f       	add	r18, r18
 412:	33 1f       	adc	r19, r19
 414:	4a 95       	dec	r20
 416:	e1 f7       	brne	.-8      	; 0x410 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x118>
 418:	e2 0f       	add	r30, r18
 41a:	f3 1f       	adc	r31, r19
 41c:	ee 5e       	subi	r30, 0xEE	; 238
 41e:	fe 4f       	sbci	r31, 0xFE	; 254
 420:	95 81       	ldd	r25, Z+5	; 0x05
 422:	99 23       	and	r25, r25
 424:	79 f0       	breq	.+30     	; 0x444 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
 426:	28 2f       	mov	r18, r24
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	f9 01       	movw	r30, r18
 42c:	ee 0f       	add	r30, r30
 42e:	ff 1f       	adc	r31, r31
 430:	83 e0       	ldi	r24, 0x03	; 3
 432:	22 0f       	add	r18, r18
 434:	33 1f       	adc	r19, r19
 436:	8a 95       	dec	r24
 438:	e1 f7       	brne	.-8      	; 0x432 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x13a>
 43a:	e2 0f       	add	r30, r18
 43c:	f3 1f       	adc	r31, r19
 43e:	ee 5e       	subi	r30, 0xEE	; 238
 440:	fe 4f       	sbci	r31, 0xFE	; 254
 442:	12 82       	std	Z+2, r1	; 0x02
 444:	08 95       	ret

00000446 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
 446:	90 91 c1 00 	lds	r25, 0x00C1
 44a:	9f 77       	andi	r25, 0x7F	; 127
 44c:	90 93 c1 00 	sts	0x00C1, r25
 450:	a8 2f       	mov	r26, r24
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	fd 01       	movw	r30, r26
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	93 e0       	ldi	r25, 0x03	; 3
 45c:	aa 0f       	add	r26, r26
 45e:	bb 1f       	adc	r27, r27
 460:	9a 95       	dec	r25
 462:	e1 f7       	brne	.-8      	; 0x45c <_ZN15OrangutanSerial14receive_inlineEhPchh+0x16>
 464:	ea 0f       	add	r30, r26
 466:	fb 1f       	adc	r31, r27
 468:	ee 5e       	subi	r30, 0xEE	; 238
 46a:	fe 4f       	sbci	r31, 0xFE	; 254
 46c:	71 87       	std	Z+9, r23	; 0x09
 46e:	60 87       	std	Z+8, r22	; 0x08
 470:	68 2f       	mov	r22, r24
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	fb 01       	movw	r30, r22
 476:	ee 0f       	add	r30, r30
 478:	ff 1f       	adc	r31, r31
 47a:	53 e0       	ldi	r21, 0x03	; 3
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	5a 95       	dec	r21
 482:	e1 f7       	brne	.-8      	; 0x47c <_ZN15OrangutanSerial14receive_inlineEhPchh+0x36>
 484:	e6 0f       	add	r30, r22
 486:	f7 1f       	adc	r31, r23
 488:	ee 5e       	subi	r30, 0xEE	; 238
 48a:	fe 4f       	sbci	r31, 0xFE	; 254
 48c:	12 82       	std	Z+2, r1	; 0x02
 48e:	68 2f       	mov	r22, r24
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	fb 01       	movw	r30, r22
 494:	ee 0f       	add	r30, r30
 496:	ff 1f       	adc	r31, r31
 498:	93 e0       	ldi	r25, 0x03	; 3
 49a:	66 0f       	add	r22, r22
 49c:	77 1f       	adc	r23, r23
 49e:	9a 95       	dec	r25
 4a0:	e1 f7       	brne	.-8      	; 0x49a <_ZN15OrangutanSerial14receive_inlineEhPchh+0x54>
 4a2:	e6 0f       	add	r30, r22
 4a4:	f7 1f       	adc	r31, r23
 4a6:	ee 5e       	subi	r30, 0xEE	; 238
 4a8:	fe 4f       	sbci	r31, 0xFE	; 254
 4aa:	44 83       	std	Z+4, r20	; 0x04
 4ac:	48 2f       	mov	r20, r24
 4ae:	50 e0       	ldi	r21, 0x00	; 0
 4b0:	fa 01       	movw	r30, r20
 4b2:	ee 0f       	add	r30, r30
 4b4:	ff 1f       	adc	r31, r31
 4b6:	a3 e0       	ldi	r26, 0x03	; 3
 4b8:	44 0f       	add	r20, r20
 4ba:	55 1f       	adc	r21, r21
 4bc:	aa 95       	dec	r26
 4be:	e1 f7       	brne	.-8      	; 0x4b8 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x72>
 4c0:	e4 0f       	add	r30, r20
 4c2:	f5 1f       	adc	r31, r21
 4c4:	ee 5e       	subi	r30, 0xEE	; 238
 4c6:	fe 4f       	sbci	r31, 0xFE	; 254
 4c8:	25 83       	std	Z+5, r18	; 0x05
 4ca:	28 2f       	mov	r18, r24
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	f9 01       	movw	r30, r18
 4d0:	ee 0f       	add	r30, r30
 4d2:	ff 1f       	adc	r31, r31
 4d4:	63 e0       	ldi	r22, 0x03	; 3
 4d6:	22 0f       	add	r18, r18
 4d8:	33 1f       	adc	r19, r19
 4da:	6a 95       	dec	r22
 4dc:	e1 f7       	brne	.-8      	; 0x4d6 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x90>
 4de:	e2 0f       	add	r30, r18
 4e0:	f3 1f       	adc	r31, r19
 4e2:	ee 5e       	subi	r30, 0xEE	; 238
 4e4:	fe 4f       	sbci	r31, 0xFE	; 254
 4e6:	80 81       	ld	r24, Z
 4e8:	88 23       	and	r24, r24
 4ea:	29 f4       	brne	.+10     	; 0x4f6 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xb0>
 4ec:	80 91 c1 00 	lds	r24, 0x00C1
 4f0:	80 68       	ori	r24, 0x80	; 128
 4f2:	80 93 c1 00 	sts	0x00C1, r24
 4f6:	08 95       	ret

000004f8 <_ZN15OrangutanSerial11receiveRingEhPch>:
 4f8:	21 e0       	ldi	r18, 0x01	; 1
 4fa:	0e 94 23 02 	call	0x446	; 0x446 <_ZN15OrangutanSerial14receive_inlineEhPchh>
 4fe:	08 95       	ret

00000500 <_ZN15OrangutanSerial11receiveRingEPch>:
 500:	9c 01       	movw	r18, r24
 502:	46 2f       	mov	r20, r22
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	b9 01       	movw	r22, r18
 508:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_ZN15OrangutanSerial11receiveRingEhPch>
 50c:	08 95       	ret

0000050e <serial_receive_ring>:
 50e:	0e 94 80 02 	call	0x500	; 0x500 <_ZN15OrangutanSerial11receiveRingEPch>
 512:	08 95       	ret

00000514 <__vector_18>:
 514:	1f 92       	push	r1
 516:	0f 92       	push	r0
 518:	0f b6       	in	r0, 0x3f	; 63
 51a:	0f 92       	push	r0
 51c:	11 24       	eor	r1, r1
 51e:	2f 93       	push	r18
 520:	3f 93       	push	r19
 522:	4f 93       	push	r20
 524:	5f 93       	push	r21
 526:	6f 93       	push	r22
 528:	7f 93       	push	r23
 52a:	8f 93       	push	r24
 52c:	9f 93       	push	r25
 52e:	af 93       	push	r26
 530:	bf 93       	push	r27
 532:	ef 93       	push	r30
 534:	ff 93       	push	r31
 536:	60 91 c6 00 	lds	r22, 0x00C6
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
 540:	ff 91       	pop	r31
 542:	ef 91       	pop	r30
 544:	bf 91       	pop	r27
 546:	af 91       	pop	r26
 548:	9f 91       	pop	r25
 54a:	8f 91       	pop	r24
 54c:	7f 91       	pop	r23
 54e:	6f 91       	pop	r22
 550:	5f 91       	pop	r21
 552:	4f 91       	pop	r20
 554:	3f 91       	pop	r19
 556:	2f 91       	pop	r18
 558:	0f 90       	pop	r0
 55a:	0f be       	out	0x3f, r0	; 63
 55c:	0f 90       	pop	r0
 55e:	1f 90       	pop	r1
 560:	18 95       	reti

00000562 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
 562:	28 2f       	mov	r18, r24
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	f9 01       	movw	r30, r18
 568:	ee 0f       	add	r30, r30
 56a:	ff 1f       	adc	r31, r31
 56c:	93 e0       	ldi	r25, 0x03	; 3
 56e:	22 0f       	add	r18, r18
 570:	33 1f       	adc	r19, r19
 572:	9a 95       	dec	r25
 574:	e1 f7       	brne	.-8      	; 0x56e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0xc>
 576:	e2 0f       	add	r30, r18
 578:	f3 1f       	adc	r31, r19
 57a:	ee 5e       	subi	r30, 0xEE	; 238
 57c:	fe 4f       	sbci	r31, 0xFE	; 254
 57e:	26 81       	ldd	r18, Z+6	; 0x06
 580:	37 81       	ldd	r19, Z+7	; 0x07
 582:	21 15       	cp	r18, r1
 584:	31 05       	cpc	r19, r1
 586:	b9 f1       	breq	.+110    	; 0x5f6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x94>
 588:	28 2f       	mov	r18, r24
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	f9 01       	movw	r30, r18
 58e:	ee 0f       	add	r30, r30
 590:	ff 1f       	adc	r31, r31
 592:	a3 e0       	ldi	r26, 0x03	; 3
 594:	22 0f       	add	r18, r18
 596:	33 1f       	adc	r19, r19
 598:	aa 95       	dec	r26
 59a:	e1 f7       	brne	.-8      	; 0x594 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x32>
 59c:	e2 0f       	add	r30, r18
 59e:	f3 1f       	adc	r31, r19
 5a0:	ee 5e       	subi	r30, 0xEE	; 238
 5a2:	fe 4f       	sbci	r31, 0xFE	; 254
 5a4:	41 81       	ldd	r20, Z+1	; 0x01
 5a6:	28 2f       	mov	r18, r24
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	f9 01       	movw	r30, r18
 5ac:	ee 0f       	add	r30, r30
 5ae:	ff 1f       	adc	r31, r31
 5b0:	63 e0       	ldi	r22, 0x03	; 3
 5b2:	22 0f       	add	r18, r18
 5b4:	33 1f       	adc	r19, r19
 5b6:	6a 95       	dec	r22
 5b8:	e1 f7       	brne	.-8      	; 0x5b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x50>
 5ba:	e2 0f       	add	r30, r18
 5bc:	f3 1f       	adc	r31, r19
 5be:	ee 5e       	subi	r30, 0xEE	; 238
 5c0:	fe 4f       	sbci	r31, 0xFE	; 254
 5c2:	93 81       	ldd	r25, Z+3	; 0x03
 5c4:	49 17       	cp	r20, r25
 5c6:	b8 f4       	brcc	.+46     	; 0x5f6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x94>
 5c8:	28 2f       	mov	r18, r24
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	f9 01       	movw	r30, r18
 5ce:	ee 0f       	add	r30, r30
 5d0:	ff 1f       	adc	r31, r31
 5d2:	43 e0       	ldi	r20, 0x03	; 3
 5d4:	22 0f       	add	r18, r18
 5d6:	33 1f       	adc	r19, r19
 5d8:	4a 95       	dec	r20
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x72>
 5dc:	e2 0f       	add	r30, r18
 5de:	f3 1f       	adc	r31, r19
 5e0:	ee 5e       	subi	r30, 0xEE	; 238
 5e2:	fe 4f       	sbci	r31, 0xFE	; 254
 5e4:	80 81       	ld	r24, Z
 5e6:	88 23       	and	r24, r24
 5e8:	31 f4       	brne	.+12     	; 0x5f6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x94>
 5ea:	80 91 c1 00 	lds	r24, 0x00C1
 5ee:	80 62       	ori	r24, 0x20	; 32
 5f0:	80 93 c1 00 	sts	0x00C1, r24
 5f4:	08 95       	ret
 5f6:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_Z25uart_disable_tx_interrupth.clone.1>
 5fa:	08 95       	ret

000005fc <_ZN15OrangutanSerial15initUART_inlineEh>:
 5fc:	28 2f       	mov	r18, r24
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	f9 01       	movw	r30, r18
 602:	ee 0f       	add	r30, r30
 604:	ff 1f       	adc	r31, r31
 606:	53 e0       	ldi	r21, 0x03	; 3
 608:	22 0f       	add	r18, r18
 60a:	33 1f       	adc	r19, r19
 60c:	5a 95       	dec	r21
 60e:	e1 f7       	brne	.-8      	; 0x608 <_ZN15OrangutanSerial15initUART_inlineEh+0xc>
 610:	e2 0f       	add	r30, r18
 612:	f3 1f       	adc	r31, r19
 614:	ee 5e       	subi	r30, 0xEE	; 238
 616:	fe 4f       	sbci	r31, 0xFE	; 254
 618:	90 81       	ld	r25, Z
 61a:	99 23       	and	r25, r25
 61c:	11 f4       	brne	.+4      	; 0x622 <_ZN15OrangutanSerial15initUART_inlineEh+0x26>
 61e:	98 e9       	ldi	r25, 0x98	; 152
 620:	01 c0       	rjmp	.+2      	; 0x624 <_ZN15OrangutanSerial15initUART_inlineEh+0x28>
 622:	98 e1       	ldi	r25, 0x18	; 24
 624:	90 93 c1 00 	sts	0x00C1, r25
 628:	0e 94 b1 02 	call	0x562	; 0x562 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
 62c:	78 94       	sei
 62e:	08 95       	ret

00000630 <_ZN15OrangutanSerial11setBaudRateEm>:
 630:	ef 92       	push	r14
 632:	ff 92       	push	r15
 634:	0f 93       	push	r16
 636:	1f 93       	push	r17
 638:	7b 01       	movw	r14, r22
 63a:	8c 01       	movw	r16, r24
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <_ZN15OrangutanSerial15initUART_inlineEh>
 642:	c8 01       	movw	r24, r16
 644:	b7 01       	movw	r22, r14
 646:	28 ef       	ldi	r18, 0xF8	; 248
 648:	3f ef       	ldi	r19, 0xFF	; 255
 64a:	4f ef       	ldi	r20, 0xFF	; 255
 64c:	5f ef       	ldi	r21, 0xFF	; 255
 64e:	0e 94 0b 06 	call	0xc16	; 0xc16 <__mulsi3>
 652:	60 50       	subi	r22, 0x00	; 0
 654:	73 4d       	sbci	r23, 0xD3	; 211
 656:	8e 4c       	sbci	r24, 0xCE	; 206
 658:	9e 4f       	sbci	r25, 0xFE	; 254
 65a:	a8 01       	movw	r20, r16
 65c:	97 01       	movw	r18, r14
 65e:	e4 e0       	ldi	r30, 0x04	; 4
 660:	22 0f       	add	r18, r18
 662:	33 1f       	adc	r19, r19
 664:	44 1f       	adc	r20, r20
 666:	55 1f       	adc	r21, r21
 668:	ea 95       	dec	r30
 66a:	d1 f7       	brne	.-12     	; 0x660 <_ZN15OrangutanSerial11setBaudRateEm+0x30>
 66c:	0e 94 43 06 	call	0xc86	; 0xc86 <__udivmodsi4>
 670:	30 93 c5 00 	sts	0x00C5, r19
 674:	20 93 c4 00 	sts	0x00C4, r18
 678:	1f 91       	pop	r17
 67a:	0f 91       	pop	r16
 67c:	ff 90       	pop	r15
 67e:	ef 90       	pop	r14
 680:	08 95       	ret

00000682 <serial_set_baud_rate>:
 682:	0e 94 18 03 	call	0x630	; 0x630 <_ZN15OrangutanSerial11setBaudRateEm>
 686:	08 95       	ret

00000688 <_ZN15OrangutanSerial11uart_tx_isrEh>:
 688:	28 2f       	mov	r18, r24
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	f9 01       	movw	r30, r18
 68e:	ee 0f       	add	r30, r30
 690:	ff 1f       	adc	r31, r31
 692:	73 e0       	ldi	r23, 0x03	; 3
 694:	22 0f       	add	r18, r18
 696:	33 1f       	adc	r19, r19
 698:	7a 95       	dec	r23
 69a:	e1 f7       	brne	.-8      	; 0x694 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc>
 69c:	e2 0f       	add	r30, r18
 69e:	f3 1f       	adc	r31, r19
 6a0:	ee 5e       	subi	r30, 0xEE	; 238
 6a2:	fe 4f       	sbci	r31, 0xFE	; 254
 6a4:	46 81       	ldd	r20, Z+6	; 0x06
 6a6:	57 81       	ldd	r21, Z+7	; 0x07
 6a8:	41 15       	cp	r20, r1
 6aa:	51 05       	cpc	r21, r1
 6ac:	09 f4       	brne	.+2      	; 0x6b0 <_ZN15OrangutanSerial11uart_tx_isrEh+0x28>
 6ae:	58 c0       	rjmp	.+176    	; 0x760 <_ZN15OrangutanSerial11uart_tx_isrEh+0xd8>
 6b0:	28 2f       	mov	r18, r24
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	f9 01       	movw	r30, r18
 6b6:	ee 0f       	add	r30, r30
 6b8:	ff 1f       	adc	r31, r31
 6ba:	93 e0       	ldi	r25, 0x03	; 3
 6bc:	22 0f       	add	r18, r18
 6be:	33 1f       	adc	r19, r19
 6c0:	9a 95       	dec	r25
 6c2:	e1 f7       	brne	.-8      	; 0x6bc <_ZN15OrangutanSerial11uart_tx_isrEh+0x34>
 6c4:	e2 0f       	add	r30, r18
 6c6:	f3 1f       	adc	r31, r19
 6c8:	ee 5e       	subi	r30, 0xEE	; 238
 6ca:	fe 4f       	sbci	r31, 0xFE	; 254
 6cc:	61 81       	ldd	r22, Z+1	; 0x01
 6ce:	28 2f       	mov	r18, r24
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	f9 01       	movw	r30, r18
 6d4:	ee 0f       	add	r30, r30
 6d6:	ff 1f       	adc	r31, r31
 6d8:	a3 e0       	ldi	r26, 0x03	; 3
 6da:	22 0f       	add	r18, r18
 6dc:	33 1f       	adc	r19, r19
 6de:	aa 95       	dec	r26
 6e0:	e1 f7       	brne	.-8      	; 0x6da <_ZN15OrangutanSerial11uart_tx_isrEh+0x52>
 6e2:	e2 0f       	add	r30, r18
 6e4:	f3 1f       	adc	r31, r19
 6e6:	ee 5e       	subi	r30, 0xEE	; 238
 6e8:	fe 4f       	sbci	r31, 0xFE	; 254
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	69 17       	cp	r22, r25
 6ee:	c0 f5       	brcc	.+112    	; 0x760 <_ZN15OrangutanSerial11uart_tx_isrEh+0xd8>
 6f0:	90 91 c0 00 	lds	r25, 0x00C0
 6f4:	95 ff       	sbrs	r25, 5
 6f6:	34 c0       	rjmp	.+104    	; 0x760 <_ZN15OrangutanSerial11uart_tx_isrEh+0xd8>
 6f8:	28 2f       	mov	r18, r24
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	f9 01       	movw	r30, r18
 6fe:	ee 0f       	add	r30, r30
 700:	ff 1f       	adc	r31, r31
 702:	63 e0       	ldi	r22, 0x03	; 3
 704:	22 0f       	add	r18, r18
 706:	33 1f       	adc	r19, r19
 708:	6a 95       	dec	r22
 70a:	e1 f7       	brne	.-8      	; 0x704 <_ZN15OrangutanSerial11uart_tx_isrEh+0x7c>
 70c:	e2 0f       	add	r30, r18
 70e:	f3 1f       	adc	r31, r19
 710:	ee 5e       	subi	r30, 0xEE	; 238
 712:	fe 4f       	sbci	r31, 0xFE	; 254
 714:	91 81       	ldd	r25, Z+1	; 0x01
 716:	49 0f       	add	r20, r25
 718:	51 1d       	adc	r21, r1
 71a:	fa 01       	movw	r30, r20
 71c:	90 81       	ld	r25, Z
 71e:	90 93 c6 00 	sts	0x00C6, r25
 722:	28 2f       	mov	r18, r24
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	f9 01       	movw	r30, r18
 728:	ee 0f       	add	r30, r30
 72a:	ff 1f       	adc	r31, r31
 72c:	93 e0       	ldi	r25, 0x03	; 3
 72e:	22 0f       	add	r18, r18
 730:	33 1f       	adc	r19, r19
 732:	9a 95       	dec	r25
 734:	e1 f7       	brne	.-8      	; 0x72e <_ZN15OrangutanSerial11uart_tx_isrEh+0xa6>
 736:	e2 0f       	add	r30, r18
 738:	f3 1f       	adc	r31, r19
 73a:	ee 5e       	subi	r30, 0xEE	; 238
 73c:	fe 4f       	sbci	r31, 0xFE	; 254
 73e:	91 81       	ldd	r25, Z+1	; 0x01
 740:	9f 5f       	subi	r25, 0xFF	; 255
 742:	28 2f       	mov	r18, r24
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	f9 01       	movw	r30, r18
 748:	ee 0f       	add	r30, r30
 74a:	ff 1f       	adc	r31, r31
 74c:	a3 e0       	ldi	r26, 0x03	; 3
 74e:	22 0f       	add	r18, r18
 750:	33 1f       	adc	r19, r19
 752:	aa 95       	dec	r26
 754:	e1 f7       	brne	.-8      	; 0x74e <_ZN15OrangutanSerial11uart_tx_isrEh+0xc6>
 756:	e2 0f       	add	r30, r18
 758:	f3 1f       	adc	r31, r19
 75a:	ee 5e       	subi	r30, 0xEE	; 238
 75c:	fe 4f       	sbci	r31, 0xFE	; 254
 75e:	91 83       	std	Z+1, r25	; 0x01
 760:	0e 94 b1 02 	call	0x562	; 0x562 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
 764:	08 95       	ret

00000766 <_ZN15OrangutanSerial4sendEhPch>:
 766:	a2 e1       	ldi	r26, 0x12	; 18
 768:	b1 e0       	ldi	r27, 0x01	; 1
 76a:	28 2f       	mov	r18, r24
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	f9 01       	movw	r30, r18
 770:	ee 0f       	add	r30, r30
 772:	ff 1f       	adc	r31, r31
 774:	93 e0       	ldi	r25, 0x03	; 3
 776:	22 0f       	add	r18, r18
 778:	33 1f       	adc	r19, r19
 77a:	9a 95       	dec	r25
 77c:	e1 f7       	brne	.-8      	; 0x776 <_ZN15OrangutanSerial4sendEhPch+0x10>
 77e:	e2 0f       	add	r30, r18
 780:	f3 1f       	adc	r31, r19
 782:	ea 0f       	add	r30, r26
 784:	fb 1f       	adc	r31, r27
 786:	77 83       	std	Z+7, r23	; 0x07
 788:	66 83       	std	Z+6, r22	; 0x06
 78a:	28 2f       	mov	r18, r24
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	f9 01       	movw	r30, r18
 790:	ee 0f       	add	r30, r30
 792:	ff 1f       	adc	r31, r31
 794:	93 e0       	ldi	r25, 0x03	; 3
 796:	22 0f       	add	r18, r18
 798:	33 1f       	adc	r19, r19
 79a:	9a 95       	dec	r25
 79c:	e1 f7       	brne	.-8      	; 0x796 <_ZN15OrangutanSerial4sendEhPch+0x30>
 79e:	e2 0f       	add	r30, r18
 7a0:	f3 1f       	adc	r31, r19
 7a2:	ea 0f       	add	r30, r26
 7a4:	fb 1f       	adc	r31, r27
 7a6:	11 82       	std	Z+1, r1	; 0x01
 7a8:	28 2f       	mov	r18, r24
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	f9 01       	movw	r30, r18
 7ae:	ee 0f       	add	r30, r30
 7b0:	ff 1f       	adc	r31, r31
 7b2:	63 e0       	ldi	r22, 0x03	; 3
 7b4:	22 0f       	add	r18, r18
 7b6:	33 1f       	adc	r19, r19
 7b8:	6a 95       	dec	r22
 7ba:	e1 f7       	brne	.-8      	; 0x7b4 <_ZN15OrangutanSerial4sendEhPch+0x4e>
 7bc:	e2 0f       	add	r30, r18
 7be:	f3 1f       	adc	r31, r19
 7c0:	ea 0f       	add	r30, r26
 7c2:	fb 1f       	adc	r31, r27
 7c4:	43 83       	std	Z+3, r20	; 0x03
 7c6:	0e 94 b1 02 	call	0x562	; 0x562 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
 7ca:	08 95       	ret

000007cc <_ZN15OrangutanSerial4sendEPch>:
 7cc:	9c 01       	movw	r18, r24
 7ce:	46 2f       	mov	r20, r22
 7d0:	80 e0       	ldi	r24, 0x00	; 0
 7d2:	b9 01       	movw	r22, r18
 7d4:	0e 94 b3 03 	call	0x766	; 0x766 <_ZN15OrangutanSerial4sendEhPch>
 7d8:	08 95       	ret

000007da <serial_send>:
 7da:	0e 94 e6 03 	call	0x7cc	; 0x7cc <_ZN15OrangutanSerial4sendEPch>
 7de:	08 95       	ret

000007e0 <__vector_19>:
 7e0:	1f 92       	push	r1
 7e2:	0f 92       	push	r0
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	0f 92       	push	r0
 7e8:	11 24       	eor	r1, r1
 7ea:	2f 93       	push	r18
 7ec:	3f 93       	push	r19
 7ee:	4f 93       	push	r20
 7f0:	5f 93       	push	r21
 7f2:	6f 93       	push	r22
 7f4:	7f 93       	push	r23
 7f6:	8f 93       	push	r24
 7f8:	9f 93       	push	r25
 7fa:	af 93       	push	r26
 7fc:	bf 93       	push	r27
 7fe:	ef 93       	push	r30
 800:	ff 93       	push	r31
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	0e 94 44 03 	call	0x688	; 0x688 <_ZN15OrangutanSerial11uart_tx_isrEh>
 808:	ff 91       	pop	r31
 80a:	ef 91       	pop	r30
 80c:	bf 91       	pop	r27
 80e:	af 91       	pop	r26
 810:	9f 91       	pop	r25
 812:	8f 91       	pop	r24
 814:	7f 91       	pop	r23
 816:	6f 91       	pop	r22
 818:	5f 91       	pop	r21
 81a:	4f 91       	pop	r20
 81c:	3f 91       	pop	r19
 81e:	2f 91       	pop	r18
 820:	0f 90       	pop	r0
 822:	0f be       	out	0x3f, r0	; 63
 824:	0f 90       	pop	r0
 826:	1f 90       	pop	r1
 828:	18 95       	reti

0000082a <_ZN13OrangutanTime17delayMicrosecondsEj>:
 82a:	6f 93       	push	r22
 82c:	64 e0       	ldi	r22, 0x04	; 4
 82e:	6a 95       	dec	r22
 830:	f1 f7       	brne	.-4      	; 0x82e <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
 832:	6f 91       	pop	r22
 834:	01 97       	sbiw	r24, 0x01	; 1
 836:	c9 f7       	brne	.-14     	; 0x82a <_ZN13OrangutanTime17delayMicrosecondsEj>
 838:	08 95       	ret

0000083a <__vector_9>:
 83a:	2f 92       	push	r2
 83c:	8f 93       	push	r24
 83e:	9f 93       	push	r25
 840:	2f b6       	in	r2, 0x3f	; 63
 842:	80 91 1d 01 	lds	r24, 0x011D
 846:	90 91 1e 01 	lds	r25, 0x011E
 84a:	01 96       	adiw	r24, 0x01	; 1
 84c:	80 93 1d 01 	sts	0x011D, r24
 850:	90 93 1e 01 	sts	0x011E, r25
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	80 91 1f 01 	lds	r24, 0x011F
 85a:	89 1f       	adc	r24, r25
 85c:	80 93 1f 01 	sts	0x011F, r24
 860:	90 91 25 01 	lds	r25, 0x0125
 864:	9c 5f       	subi	r25, 0xFC	; 252
 866:	90 93 25 01 	sts	0x0125, r25
 86a:	80 91 24 01 	lds	r24, 0x0124
 86e:	80 51       	subi	r24, 0x10	; 16
 870:	97 42       	sbci	r25, 0x27	; 39
 872:	c0 f0       	brcs	.+48     	; 0x8a4 <end>
 874:	90 93 25 01 	sts	0x0125, r25
 878:	80 93 24 01 	sts	0x0124, r24
 87c:	80 91 20 01 	lds	r24, 0x0120
 880:	90 91 21 01 	lds	r25, 0x0121
 884:	01 96       	adiw	r24, 0x01	; 1
 886:	80 93 20 01 	sts	0x0120, r24
 88a:	90 93 21 01 	sts	0x0121, r25
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	80 91 22 01 	lds	r24, 0x0122
 894:	89 1f       	adc	r24, r25
 896:	80 93 22 01 	sts	0x0122, r24
 89a:	80 91 23 01 	lds	r24, 0x0123
 89e:	89 1f       	adc	r24, r25
 8a0:	80 93 23 01 	sts	0x0123, r24

000008a4 <end>:
 8a4:	2f be       	out	0x3f, r2	; 63
 8a6:	9f 91       	pop	r25
 8a8:	8f 91       	pop	r24
 8aa:	2f 90       	pop	r2
 8ac:	18 95       	reti

000008ae <_ZN13OrangutanTime17delayMillisecondsEj>:
 8ae:	cf 93       	push	r28
 8b0:	df 93       	push	r29
 8b2:	ec 01       	movw	r28, r24
 8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
 8b6:	88 ee       	ldi	r24, 0xE8	; 232
 8b8:	93 e0       	ldi	r25, 0x03	; 3
 8ba:	0e 94 15 04 	call	0x82a	; 0x82a <_ZN13OrangutanTime17delayMicrosecondsEj>
 8be:	21 97       	sbiw	r28, 0x01	; 1
 8c0:	20 97       	sbiw	r28, 0x00	; 0
 8c2:	c9 f7       	brne	.-14     	; 0x8b6 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	08 95       	ret

000008ca <delay_ms>:
 8ca:	0e 94 57 04 	call	0x8ae	; 0x8ae <_ZN13OrangutanTime17delayMillisecondsEj>
 8ce:	08 95       	ret

000008d0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
 8d0:	fc 01       	movw	r30, r24
 8d2:	11 82       	std	Z+1, r1	; 0x01
 8d4:	10 82       	st	Z, r1
 8d6:	13 82       	std	Z+3, r1	; 0x03
 8d8:	12 82       	std	Z+2, r1	; 0x02
 8da:	15 82       	std	Z+5, r1	; 0x05
 8dc:	14 82       	std	Z+4, r1	; 0x04
 8de:	16 82       	std	Z+6, r1	; 0x06
 8e0:	68 30       	cpi	r22, 0x08	; 8
 8e2:	68 f4       	brcc	.+26     	; 0x8fe <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
 8e4:	89 e2       	ldi	r24, 0x29	; 41
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	91 83       	std	Z+1, r25	; 0x01
 8ea:	80 83       	st	Z, r24
 8ec:	8b e2       	ldi	r24, 0x2B	; 43
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	93 83       	std	Z+3, r25	; 0x03
 8f2:	82 83       	std	Z+2, r24	; 0x02
 8f4:	8a e2       	ldi	r24, 0x2A	; 42
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	95 83       	std	Z+5, r25	; 0x05
 8fa:	84 83       	std	Z+4, r24	; 0x04
 8fc:	11 c0       	rjmp	.+34     	; 0x920 <__stack+0x21>
 8fe:	6e 30       	cpi	r22, 0x0E	; 14
 900:	c0 f4       	brcc	.+48     	; 0x932 <__stack+0x33>
 902:	83 e2       	ldi	r24, 0x23	; 35
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	91 83       	std	Z+1, r25	; 0x01
 908:	80 83       	st	Z, r24
 90a:	85 e2       	ldi	r24, 0x25	; 37
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	93 83       	std	Z+3, r25	; 0x03
 910:	82 83       	std	Z+2, r24	; 0x02
 912:	84 e2       	ldi	r24, 0x24	; 36
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	95 83       	std	Z+5, r25	; 0x05
 918:	84 83       	std	Z+4, r24	; 0x04
 91a:	70 e0       	ldi	r23, 0x00	; 0
 91c:	68 50       	subi	r22, 0x08	; 8
 91e:	70 40       	sbci	r23, 0x00	; 0
 920:	81 e0       	ldi	r24, 0x01	; 1
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	02 c0       	rjmp	.+4      	; 0x92a <__stack+0x2b>
 926:	88 0f       	add	r24, r24
 928:	99 1f       	adc	r25, r25
 92a:	6a 95       	dec	r22
 92c:	e2 f7       	brpl	.-8      	; 0x926 <__stack+0x27>
 92e:	86 83       	std	Z+6, r24	; 0x06
 930:	08 95       	ret
 932:	65 31       	cpi	r22, 0x15	; 21
 934:	b8 f4       	brcc	.+46     	; 0x964 <__stack+0x65>
 936:	86 e2       	ldi	r24, 0x26	; 38
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	91 83       	std	Z+1, r25	; 0x01
 93c:	80 83       	st	Z, r24
 93e:	88 e2       	ldi	r24, 0x28	; 40
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	93 83       	std	Z+3, r25	; 0x03
 944:	82 83       	std	Z+2, r24	; 0x02
 946:	87 e2       	ldi	r24, 0x27	; 39
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	95 83       	std	Z+5, r25	; 0x05
 94c:	84 83       	std	Z+4, r24	; 0x04
 94e:	70 e0       	ldi	r23, 0x00	; 0
 950:	6e 50       	subi	r22, 0x0E	; 14
 952:	70 40       	sbci	r23, 0x00	; 0
 954:	81 e0       	ldi	r24, 0x01	; 1
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	02 c0       	rjmp	.+4      	; 0x95e <__stack+0x5f>
 95a:	88 0f       	add	r24, r24
 95c:	99 1f       	adc	r25, r25
 95e:	6a 95       	dec	r22
 960:	e2 f7       	brpl	.-8      	; 0x95a <__stack+0x5b>
 962:	86 83       	std	Z+6, r24	; 0x06
 964:	08 95       	ret

00000966 <_ZL25enable_interrupts_for_pinh>:
 966:	a7 e0       	ldi	r26, 0x07	; 7
 968:	b0 e0       	ldi	r27, 0x00	; 0
 96a:	e9 eb       	ldi	r30, 0xB9	; 185
 96c:	f4 e0       	ldi	r31, 0x04	; 4
 96e:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__prologue_saves__+0x20>
 972:	68 2f       	mov	r22, r24
 974:	ce 01       	movw	r24, r28
 976:	01 96       	adiw	r24, 0x01	; 1
 978:	0e 94 68 04 	call	0x8d0	; 0x8d0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
 97c:	89 81       	ldd	r24, Y+1	; 0x01
 97e:	9a 81       	ldd	r25, Y+2	; 0x02
 980:	83 32       	cpi	r24, 0x23	; 35
 982:	91 05       	cpc	r25, r1
 984:	31 f4       	brne	.+12     	; 0x992 <_ZL25enable_interrupts_for_pinh+0x2c>
 986:	80 91 6b 00 	lds	r24, 0x006B
 98a:	9f 81       	ldd	r25, Y+7	; 0x07
 98c:	89 2b       	or	r24, r25
 98e:	80 93 6b 00 	sts	0x006B, r24
 992:	89 81       	ldd	r24, Y+1	; 0x01
 994:	9a 81       	ldd	r25, Y+2	; 0x02
 996:	86 32       	cpi	r24, 0x26	; 38
 998:	91 05       	cpc	r25, r1
 99a:	31 f4       	brne	.+12     	; 0x9a8 <_ZL25enable_interrupts_for_pinh+0x42>
 99c:	80 91 6c 00 	lds	r24, 0x006C
 9a0:	9f 81       	ldd	r25, Y+7	; 0x07
 9a2:	89 2b       	or	r24, r25
 9a4:	80 93 6c 00 	sts	0x006C, r24
 9a8:	89 81       	ldd	r24, Y+1	; 0x01
 9aa:	9a 81       	ldd	r25, Y+2	; 0x02
 9ac:	89 32       	cpi	r24, 0x29	; 41
 9ae:	91 05       	cpc	r25, r1
 9b0:	31 f4       	brne	.+12     	; 0x9be <_ZL25enable_interrupts_for_pinh+0x58>
 9b2:	80 91 6d 00 	lds	r24, 0x006D
 9b6:	9f 81       	ldd	r25, Y+7	; 0x07
 9b8:	89 2b       	or	r24, r25
 9ba:	80 93 6d 00 	sts	0x006D, r24
 9be:	ed 81       	ldd	r30, Y+5	; 0x05
 9c0:	fe 81       	ldd	r31, Y+6	; 0x06
 9c2:	90 81       	ld	r25, Z
 9c4:	8f 81       	ldd	r24, Y+7	; 0x07
 9c6:	80 95       	com	r24
 9c8:	89 23       	and	r24, r25
 9ca:	80 83       	st	Z, r24
 9cc:	8f ef       	ldi	r24, 0xFF	; 255
 9ce:	80 93 68 00 	sts	0x0068, r24
 9d2:	27 96       	adiw	r28, 0x07	; 7
 9d4:	e2 e0       	ldi	r30, 0x02	; 2
 9d6:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__epilogue_restores__+0x20>

000009da <_ZN16OrangutanDigital11isInputHighEh>:
 9da:	a7 e0       	ldi	r26, 0x07	; 7
 9dc:	b0 e0       	ldi	r27, 0x00	; 0
 9de:	e3 ef       	ldi	r30, 0xF3	; 243
 9e0:	f4 e0       	ldi	r31, 0x04	; 4
 9e2:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__prologue_saves__+0x20>
 9e6:	68 2f       	mov	r22, r24
 9e8:	ce 01       	movw	r24, r28
 9ea:	01 96       	adiw	r24, 0x01	; 1
 9ec:	0e 94 68 04 	call	0x8d0	; 0x8d0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
 9f0:	e9 81       	ldd	r30, Y+1	; 0x01
 9f2:	fa 81       	ldd	r31, Y+2	; 0x02
 9f4:	90 81       	ld	r25, Z
 9f6:	8f 81       	ldd	r24, Y+7	; 0x07
 9f8:	89 23       	and	r24, r25
 9fa:	27 96       	adiw	r28, 0x07	; 7
 9fc:	e2 e0       	ldi	r30, 0x02	; 2
 9fe:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__epilogue_restores__+0x20>

00000a02 <__vector_3>:
 a02:	1f 92       	push	r1
 a04:	0f 92       	push	r0
 a06:	0f b6       	in	r0, 0x3f	; 63
 a08:	0f 92       	push	r0
 a0a:	11 24       	eor	r1, r1
 a0c:	ff 92       	push	r15
 a0e:	0f 93       	push	r16
 a10:	1f 93       	push	r17
 a12:	2f 93       	push	r18
 a14:	3f 93       	push	r19
 a16:	4f 93       	push	r20
 a18:	5f 93       	push	r21
 a1a:	6f 93       	push	r22
 a1c:	7f 93       	push	r23
 a1e:	8f 93       	push	r24
 a20:	9f 93       	push	r25
 a22:	af 93       	push	r26
 a24:	bf 93       	push	r27
 a26:	ef 93       	push	r30
 a28:	ff 93       	push	r31
 a2a:	80 91 2d 01 	lds	r24, 0x012D
 a2e:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 a32:	f8 2e       	mov	r15, r24
 a34:	80 91 2f 01 	lds	r24, 0x012F
 a38:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 a3c:	18 2f       	mov	r17, r24
 a3e:	80 91 2e 01 	lds	r24, 0x012E
 a42:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 a46:	08 2f       	mov	r16, r24
 a48:	80 91 30 01 	lds	r24, 0x0130
 a4c:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 a50:	40 91 32 01 	lds	r20, 0x0132
 a54:	60 91 31 01 	lds	r22, 0x0131
 a58:	50 91 34 01 	lds	r21, 0x0134
 a5c:	90 91 33 01 	lds	r25, 0x0133
 a60:	f4 16       	cp	r15, r20
 a62:	51 f0       	breq	.+20     	; 0xa78 <__vector_3+0x76>
 a64:	20 91 2b 01 	lds	r18, 0x012B
 a68:	30 91 2c 01 	lds	r19, 0x012C
 a6c:	2f 5f       	subi	r18, 0xFF	; 255
 a6e:	3f 4f       	sbci	r19, 0xFF	; 255
 a70:	30 93 2c 01 	sts	0x012C, r19
 a74:	20 93 2b 01 	sts	0x012B, r18
 a78:	06 17       	cp	r16, r22
 a7a:	51 f0       	breq	.+20     	; 0xa90 <__vector_3+0x8e>
 a7c:	20 91 2b 01 	lds	r18, 0x012B
 a80:	30 91 2c 01 	lds	r19, 0x012C
 a84:	21 50       	subi	r18, 0x01	; 1
 a86:	30 40       	sbci	r19, 0x00	; 0
 a88:	30 93 2c 01 	sts	0x012C, r19
 a8c:	20 93 2b 01 	sts	0x012B, r18
 a90:	15 17       	cp	r17, r21
 a92:	51 f0       	breq	.+20     	; 0xaa8 <__vector_3+0xa6>
 a94:	20 91 29 01 	lds	r18, 0x0129
 a98:	30 91 2a 01 	lds	r19, 0x012A
 a9c:	2f 5f       	subi	r18, 0xFF	; 255
 a9e:	3f 4f       	sbci	r19, 0xFF	; 255
 aa0:	30 93 2a 01 	sts	0x012A, r19
 aa4:	20 93 29 01 	sts	0x0129, r18
 aa8:	89 17       	cp	r24, r25
 aaa:	51 f0       	breq	.+20     	; 0xac0 <__vector_3+0xbe>
 aac:	20 91 29 01 	lds	r18, 0x0129
 ab0:	30 91 2a 01 	lds	r19, 0x012A
 ab4:	21 50       	subi	r18, 0x01	; 1
 ab6:	30 40       	sbci	r19, 0x00	; 0
 ab8:	30 93 2a 01 	sts	0x012A, r19
 abc:	20 93 29 01 	sts	0x0129, r18
 ac0:	ef 2d       	mov	r30, r15
 ac2:	f0 e0       	ldi	r31, 0x00	; 0
 ac4:	77 27       	eor	r23, r23
 ac6:	67 fd       	sbrc	r22, 7
 ac8:	70 95       	com	r23
 aca:	e6 17       	cp	r30, r22
 acc:	f7 07       	cpc	r31, r23
 ace:	59 f0       	breq	.+22     	; 0xae6 <__vector_3+0xe4>
 ad0:	60 2f       	mov	r22, r16
 ad2:	70 e0       	ldi	r23, 0x00	; 0
 ad4:	55 27       	eor	r21, r21
 ad6:	47 fd       	sbrc	r20, 7
 ad8:	50 95       	com	r21
 ada:	64 17       	cp	r22, r20
 adc:	75 07       	cpc	r23, r21
 ade:	19 f0       	breq	.+6      	; 0xae6 <__vector_3+0xe4>
 ae0:	21 e0       	ldi	r18, 0x01	; 1
 ae2:	20 93 28 01 	sts	0x0128, r18
 ae6:	41 2f       	mov	r20, r17
 ae8:	50 e0       	ldi	r21, 0x00	; 0
 aea:	29 2f       	mov	r18, r25
 aec:	33 27       	eor	r19, r19
 aee:	27 fd       	sbrc	r18, 7
 af0:	30 95       	com	r19
 af2:	42 17       	cp	r20, r18
 af4:	53 07       	cpc	r21, r19
 af6:	69 f0       	breq	.+26     	; 0xb12 <__vector_3+0x110>
 af8:	48 2f       	mov	r20, r24
 afa:	50 e0       	ldi	r21, 0x00	; 0
 afc:	20 91 34 01 	lds	r18, 0x0134
 b00:	33 27       	eor	r19, r19
 b02:	27 fd       	sbrc	r18, 7
 b04:	30 95       	com	r19
 b06:	42 17       	cp	r20, r18
 b08:	53 07       	cpc	r21, r19
 b0a:	19 f0       	breq	.+6      	; 0xb12 <__vector_3+0x110>
 b0c:	91 e0       	ldi	r25, 0x01	; 1
 b0e:	90 93 27 01 	sts	0x0127, r25
 b12:	f0 92 31 01 	sts	0x0131, r15
 b16:	00 93 32 01 	sts	0x0132, r16
 b1a:	10 93 33 01 	sts	0x0133, r17
 b1e:	80 93 34 01 	sts	0x0134, r24
 b22:	ff 91       	pop	r31
 b24:	ef 91       	pop	r30
 b26:	bf 91       	pop	r27
 b28:	af 91       	pop	r26
 b2a:	9f 91       	pop	r25
 b2c:	8f 91       	pop	r24
 b2e:	7f 91       	pop	r23
 b30:	6f 91       	pop	r22
 b32:	5f 91       	pop	r21
 b34:	4f 91       	pop	r20
 b36:	3f 91       	pop	r19
 b38:	2f 91       	pop	r18
 b3a:	1f 91       	pop	r17
 b3c:	0f 91       	pop	r16
 b3e:	ff 90       	pop	r15
 b40:	0f 90       	pop	r0
 b42:	0f be       	out	0x3f, r0	; 63
 b44:	0f 90       	pop	r0
 b46:	1f 90       	pop	r1
 b48:	18 95       	reti

00000b4a <_ZN19PololuWheelEncoders4initEhhhh>:
 b4a:	a3 e0       	ldi	r26, 0x03	; 3
 b4c:	b0 e0       	ldi	r27, 0x00	; 0
 b4e:	eb ea       	ldi	r30, 0xAB	; 171
 b50:	f5 e0       	ldi	r31, 0x05	; 5
 b52:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__prologue_saves__+0x20>
 b56:	80 93 2d 01 	sts	0x012D, r24
 b5a:	60 93 2e 01 	sts	0x012E, r22
 b5e:	40 93 2f 01 	sts	0x012F, r20
 b62:	20 93 30 01 	sts	0x0130, r18
 b66:	f8 94       	cli
 b68:	2b 83       	std	Y+3, r18	; 0x03
 b6a:	4a 83       	std	Y+2, r20	; 0x02
 b6c:	69 83       	std	Y+1, r22	; 0x01
 b6e:	0e 94 b3 04 	call	0x966	; 0x966 <_ZL25enable_interrupts_for_pinh>
 b72:	69 81       	ldd	r22, Y+1	; 0x01
 b74:	86 2f       	mov	r24, r22
 b76:	0e 94 b3 04 	call	0x966	; 0x966 <_ZL25enable_interrupts_for_pinh>
 b7a:	4a 81       	ldd	r20, Y+2	; 0x02
 b7c:	84 2f       	mov	r24, r20
 b7e:	0e 94 b3 04 	call	0x966	; 0x966 <_ZL25enable_interrupts_for_pinh>
 b82:	2b 81       	ldd	r18, Y+3	; 0x03
 b84:	82 2f       	mov	r24, r18
 b86:	0e 94 b3 04 	call	0x966	; 0x966 <_ZL25enable_interrupts_for_pinh>
 b8a:	10 92 2c 01 	sts	0x012C, r1
 b8e:	10 92 2b 01 	sts	0x012B, r1
 b92:	10 92 2a 01 	sts	0x012A, r1
 b96:	10 92 29 01 	sts	0x0129, r1
 b9a:	10 92 28 01 	sts	0x0128, r1
 b9e:	10 92 27 01 	sts	0x0127, r1
 ba2:	80 91 2d 01 	lds	r24, 0x012D
 ba6:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 baa:	80 93 31 01 	sts	0x0131, r24
 bae:	80 91 2e 01 	lds	r24, 0x012E
 bb2:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 bb6:	80 93 32 01 	sts	0x0132, r24
 bba:	80 91 2f 01 	lds	r24, 0x012F
 bbe:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 bc2:	80 93 33 01 	sts	0x0133, r24
 bc6:	80 91 30 01 	lds	r24, 0x0130
 bca:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN16OrangutanDigital11isInputHighEh>
 bce:	80 93 34 01 	sts	0x0134, r24
 bd2:	8f ef       	ldi	r24, 0xFF	; 255
 bd4:	8b bb       	out	0x1b, r24	; 27
 bd6:	78 94       	sei
 bd8:	23 96       	adiw	r28, 0x03	; 3
 bda:	e2 e0       	ldi	r30, 0x02	; 2
 bdc:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__epilogue_restores__+0x20>

00000be0 <encoders_init>:
 be0:	0e 94 a5 05 	call	0xb4a	; 0xb4a <_ZN19PololuWheelEncoders4initEhhhh>
 be4:	08 95       	ret

00000be6 <_ZN19PololuWheelEncoders11getCountsM1Ev>:
 be6:	f8 94       	cli
 be8:	80 91 2b 01 	lds	r24, 0x012B
 bec:	90 91 2c 01 	lds	r25, 0x012C
 bf0:	78 94       	sei
 bf2:	08 95       	ret

00000bf4 <encoders_get_counts_m1>:
 bf4:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <_ZN19PololuWheelEncoders11getCountsM1Ev>
 bf8:	08 95       	ret

00000bfa <_ZN19PololuWheelEncoders19getCountsAndResetM1Ev>:
 bfa:	f8 94       	cli
 bfc:	80 91 2b 01 	lds	r24, 0x012B
 c00:	90 91 2c 01 	lds	r25, 0x012C
 c04:	10 92 2c 01 	sts	0x012C, r1
 c08:	10 92 2b 01 	sts	0x012B, r1
 c0c:	78 94       	sei
 c0e:	08 95       	ret

00000c10 <encoders_get_counts_and_reset_m1>:
 c10:	0e 94 fd 05 	call	0xbfa	; 0xbfa <_ZN19PololuWheelEncoders19getCountsAndResetM1Ev>
 c14:	08 95       	ret

00000c16 <__mulsi3>:
 c16:	db 01       	movw	r26, r22
 c18:	8f 93       	push	r24
 c1a:	9f 93       	push	r25
 c1c:	0e 94 65 06 	call	0xcca	; 0xcca <__muluhisi3>
 c20:	bf 91       	pop	r27
 c22:	af 91       	pop	r26
 c24:	a2 9f       	mul	r26, r18
 c26:	80 0d       	add	r24, r0
 c28:	91 1d       	adc	r25, r1
 c2a:	a3 9f       	mul	r26, r19
 c2c:	90 0d       	add	r25, r0
 c2e:	b2 9f       	mul	r27, r18
 c30:	90 0d       	add	r25, r0
 c32:	11 24       	eor	r1, r1
 c34:	08 95       	ret

00000c36 <__udivmodhi4>:
 c36:	aa 1b       	sub	r26, r26
 c38:	bb 1b       	sub	r27, r27
 c3a:	51 e1       	ldi	r21, 0x11	; 17
 c3c:	07 c0       	rjmp	.+14     	; 0xc4c <__udivmodhi4_ep>

00000c3e <__udivmodhi4_loop>:
 c3e:	aa 1f       	adc	r26, r26
 c40:	bb 1f       	adc	r27, r27
 c42:	a6 17       	cp	r26, r22
 c44:	b7 07       	cpc	r27, r23
 c46:	10 f0       	brcs	.+4      	; 0xc4c <__udivmodhi4_ep>
 c48:	a6 1b       	sub	r26, r22
 c4a:	b7 0b       	sbc	r27, r23

00000c4c <__udivmodhi4_ep>:
 c4c:	88 1f       	adc	r24, r24
 c4e:	99 1f       	adc	r25, r25
 c50:	5a 95       	dec	r21
 c52:	a9 f7       	brne	.-22     	; 0xc3e <__udivmodhi4_loop>
 c54:	80 95       	com	r24
 c56:	90 95       	com	r25
 c58:	bc 01       	movw	r22, r24
 c5a:	cd 01       	movw	r24, r26
 c5c:	08 95       	ret

00000c5e <__divmodhi4>:
 c5e:	97 fb       	bst	r25, 7
 c60:	07 2e       	mov	r0, r23
 c62:	16 f4       	brtc	.+4      	; 0xc68 <__divmodhi4+0xa>
 c64:	00 94       	com	r0
 c66:	07 d0       	rcall	.+14     	; 0xc76 <__divmodhi4_neg1>
 c68:	77 fd       	sbrc	r23, 7
 c6a:	09 d0       	rcall	.+18     	; 0xc7e <__divmodhi4_neg2>
 c6c:	0e 94 1b 06 	call	0xc36	; 0xc36 <__udivmodhi4>
 c70:	07 fc       	sbrc	r0, 7
 c72:	05 d0       	rcall	.+10     	; 0xc7e <__divmodhi4_neg2>
 c74:	3e f4       	brtc	.+14     	; 0xc84 <__divmodhi4_exit>

00000c76 <__divmodhi4_neg1>:
 c76:	90 95       	com	r25
 c78:	81 95       	neg	r24
 c7a:	9f 4f       	sbci	r25, 0xFF	; 255
 c7c:	08 95       	ret

00000c7e <__divmodhi4_neg2>:
 c7e:	70 95       	com	r23
 c80:	61 95       	neg	r22
 c82:	7f 4f       	sbci	r23, 0xFF	; 255

00000c84 <__divmodhi4_exit>:
 c84:	08 95       	ret

00000c86 <__udivmodsi4>:
 c86:	a1 e2       	ldi	r26, 0x21	; 33
 c88:	1a 2e       	mov	r1, r26
 c8a:	aa 1b       	sub	r26, r26
 c8c:	bb 1b       	sub	r27, r27
 c8e:	fd 01       	movw	r30, r26
 c90:	0d c0       	rjmp	.+26     	; 0xcac <__udivmodsi4_ep>

00000c92 <__udivmodsi4_loop>:
 c92:	aa 1f       	adc	r26, r26
 c94:	bb 1f       	adc	r27, r27
 c96:	ee 1f       	adc	r30, r30
 c98:	ff 1f       	adc	r31, r31
 c9a:	a2 17       	cp	r26, r18
 c9c:	b3 07       	cpc	r27, r19
 c9e:	e4 07       	cpc	r30, r20
 ca0:	f5 07       	cpc	r31, r21
 ca2:	20 f0       	brcs	.+8      	; 0xcac <__udivmodsi4_ep>
 ca4:	a2 1b       	sub	r26, r18
 ca6:	b3 0b       	sbc	r27, r19
 ca8:	e4 0b       	sbc	r30, r20
 caa:	f5 0b       	sbc	r31, r21

00000cac <__udivmodsi4_ep>:
 cac:	66 1f       	adc	r22, r22
 cae:	77 1f       	adc	r23, r23
 cb0:	88 1f       	adc	r24, r24
 cb2:	99 1f       	adc	r25, r25
 cb4:	1a 94       	dec	r1
 cb6:	69 f7       	brne	.-38     	; 0xc92 <__udivmodsi4_loop>
 cb8:	60 95       	com	r22
 cba:	70 95       	com	r23
 cbc:	80 95       	com	r24
 cbe:	90 95       	com	r25
 cc0:	9b 01       	movw	r18, r22
 cc2:	ac 01       	movw	r20, r24
 cc4:	bd 01       	movw	r22, r26
 cc6:	cf 01       	movw	r24, r30
 cc8:	08 95       	ret

00000cca <__muluhisi3>:
 cca:	0e 94 a7 06 	call	0xd4e	; 0xd4e <__umulhisi3>
 cce:	a5 9f       	mul	r26, r21
 cd0:	90 0d       	add	r25, r0
 cd2:	b4 9f       	mul	r27, r20
 cd4:	90 0d       	add	r25, r0
 cd6:	a4 9f       	mul	r26, r20
 cd8:	80 0d       	add	r24, r0
 cda:	91 1d       	adc	r25, r1
 cdc:	11 24       	eor	r1, r1
 cde:	08 95       	ret

00000ce0 <__prologue_saves__>:
 ce0:	2f 92       	push	r2
 ce2:	3f 92       	push	r3
 ce4:	4f 92       	push	r4
 ce6:	5f 92       	push	r5
 ce8:	6f 92       	push	r6
 cea:	7f 92       	push	r7
 cec:	8f 92       	push	r8
 cee:	9f 92       	push	r9
 cf0:	af 92       	push	r10
 cf2:	bf 92       	push	r11
 cf4:	cf 92       	push	r12
 cf6:	df 92       	push	r13
 cf8:	ef 92       	push	r14
 cfa:	ff 92       	push	r15
 cfc:	0f 93       	push	r16
 cfe:	1f 93       	push	r17
 d00:	cf 93       	push	r28
 d02:	df 93       	push	r29
 d04:	cd b7       	in	r28, 0x3d	; 61
 d06:	de b7       	in	r29, 0x3e	; 62
 d08:	ca 1b       	sub	r28, r26
 d0a:	db 0b       	sbc	r29, r27
 d0c:	0f b6       	in	r0, 0x3f	; 63
 d0e:	f8 94       	cli
 d10:	de bf       	out	0x3e, r29	; 62
 d12:	0f be       	out	0x3f, r0	; 63
 d14:	cd bf       	out	0x3d, r28	; 61
 d16:	09 94       	ijmp

00000d18 <__epilogue_restores__>:
 d18:	2a 88       	ldd	r2, Y+18	; 0x12
 d1a:	39 88       	ldd	r3, Y+17	; 0x11
 d1c:	48 88       	ldd	r4, Y+16	; 0x10
 d1e:	5f 84       	ldd	r5, Y+15	; 0x0f
 d20:	6e 84       	ldd	r6, Y+14	; 0x0e
 d22:	7d 84       	ldd	r7, Y+13	; 0x0d
 d24:	8c 84       	ldd	r8, Y+12	; 0x0c
 d26:	9b 84       	ldd	r9, Y+11	; 0x0b
 d28:	aa 84       	ldd	r10, Y+10	; 0x0a
 d2a:	b9 84       	ldd	r11, Y+9	; 0x09
 d2c:	c8 84       	ldd	r12, Y+8	; 0x08
 d2e:	df 80       	ldd	r13, Y+7	; 0x07
 d30:	ee 80       	ldd	r14, Y+6	; 0x06
 d32:	fd 80       	ldd	r15, Y+5	; 0x05
 d34:	0c 81       	ldd	r16, Y+4	; 0x04
 d36:	1b 81       	ldd	r17, Y+3	; 0x03
 d38:	aa 81       	ldd	r26, Y+2	; 0x02
 d3a:	b9 81       	ldd	r27, Y+1	; 0x01
 d3c:	ce 0f       	add	r28, r30
 d3e:	d1 1d       	adc	r29, r1
 d40:	0f b6       	in	r0, 0x3f	; 63
 d42:	f8 94       	cli
 d44:	de bf       	out	0x3e, r29	; 62
 d46:	0f be       	out	0x3f, r0	; 63
 d48:	cd bf       	out	0x3d, r28	; 61
 d4a:	ed 01       	movw	r28, r26
 d4c:	08 95       	ret

00000d4e <__umulhisi3>:
 d4e:	a2 9f       	mul	r26, r18
 d50:	b0 01       	movw	r22, r0
 d52:	b3 9f       	mul	r27, r19
 d54:	c0 01       	movw	r24, r0
 d56:	a3 9f       	mul	r26, r19
 d58:	70 0d       	add	r23, r0
 d5a:	81 1d       	adc	r24, r1
 d5c:	11 24       	eor	r1, r1
 d5e:	91 1d       	adc	r25, r1
 d60:	b2 9f       	mul	r27, r18
 d62:	70 0d       	add	r23, r0
 d64:	81 1d       	adc	r24, r1
 d66:	11 24       	eor	r1, r1
 d68:	91 1d       	adc	r25, r1
 d6a:	08 95       	ret

00000d6c <_exit>:
 d6c:	f8 94       	cli

00000d6e <__stop_program>:
 d6e:	ff cf       	rjmp	.-2      	; 0xd6e <__stop_program>
